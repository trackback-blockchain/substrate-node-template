version: "0.2"

env:
  variables:
    AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
    AWS_REGION: ${AWS_REGION}
    IMAGE_NAME: trackback-node
    AWS_EXE_ROLE_ARN: ${AWS_EXE_ROLE_ARN}
    AWS_TASK_ROLE_ARN: ${AWS_TASK_ROLE_ARN}
  shell: bash

phases:
  install:
    commands:
      - echo "Installing Rust dependencies"
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - source $HOME/.cargo/env
      - rustup default stable
      - rustup update
      - rustup update nightly
      - rustup target add wasm32-unknown-unknown --toolchain nightly
      - apt-get update -y
      - apt-get install -y docker.io
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - ./aws/install --update
    finally:
      - echo "Installed dependencies"
  pre_build:
    commands:
      - cargo test --package pallet-dids --lib tests
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=latest
      - echo "Build docker image"
      - docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG} .
  build:
    commands:
      - echo "Login to ECR"
      - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-southeast-2.amazonaws.com
      - echo "Push image to ECR"
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}
    finally:
      - echo "pushed to ecr"
